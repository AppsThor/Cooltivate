apply plugin: 'com.android.application'
apply plugin: 'android-apt'
def AAVersion = '3.2'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.droidcon.it.hackaton.cooltivate"
        minSdkVersion 16
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile files('libs/snapback-android-sdk-0.5.jar')
    compile 'com.android.support:appcompat-v7:21.0.3'
    compile 'io.relayr:android-sdk:0.0.12'
    compile 'com.google.android.gms:play-services:7.0.0'
    apt "org.androidannotations:androidannotations:$AAVersion"
    compile "org.androidannotations:androidannotations-api:$AAVersion"

    // Jackson
    compile 'org.springframework.android:spring-android-rest-template:1.0.+'
    compile 'com.fasterxml.jackson.core:jackson-core:2.4.+'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'

    compile project(':library')
}


apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
        // if you have multiple outputs (when using splits), you may want to have other index than 0

        resourcePackageName 'com.droidcon.it.hackaton.cooltivate'

        // If you're using Android NBS flavors you should use the following line instead of hard-coded packageName
        // resourcePackageName android.defaultConfig.applicationId

        // You can set optional annotation processing options here, like these commented options:
        // logLevel 'INFO'
        // logFile '/var/log/aa.log'
    }
}